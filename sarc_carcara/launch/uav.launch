<?xml version="1.0"?>
<launch>
    <arg name="robot_number" />
    <arg name="number_of_robots" />

    <!--Run simulated vision-->
    <!-- <node pkg="robotsim" name="vision" type="vision.py" >
        <param name="robot_number" type="int" value="$(arg robot_number)" />
        <param name="number_of_robots" type="int" value="$(arg number_of_robots)" />
    </node> -->

    <!--Run the node that will generate an example path-->
    <node pkg="robotsim" name="robot" type="drone_sim.py">
        <param name="robot_number" type="int" value="$(arg robot_number)" />
        <param name="number_of_robots" type="int" value="$(arg number_of_robots)" />
        <rosparam command="load" file="$(find robotsim)/config/drone_sim.yaml" />
    </node>

    <!--Run the node that will generate the path-->
    <node pkg="examples" name="path_generator" type="example_path.py" output="screen"> 
        <param name="robot_number" type="int" value="$(arg robot_number)" />
        <param name="number_of_robots" type="int" value="$(arg number_of_robots)" />
        <rosparam command="load" file="$(find examples)/config/pub_path.yaml" />
    </node>

    <!-- Run the node that controls the robot with vector fields -->
    <node pkg="quad_robot" name="quad_node" type="quad_node.py">
        <param name="robot_number" type="int" value="$(arg robot_number)" />
        <param name="number_of_robots" type="int" value="$(arg number_of_robots)" />
        <rosparam command="load" file="$(find quad_robot)/config/quad_params.yaml" />
    </node>

    <!-- Run fire detection system -->
    <node pkg="sarc_carcara" name="fire_detector_node" type="fire_detector_node.py" output="screen" respawn="true" />

    <!-- Run the interface between our controller and the MRS system -->
    <node pkg="sarc_carcara" name="mrs_interface_node" type="mrs_interface_node.py" output="screen" />

</launch>


